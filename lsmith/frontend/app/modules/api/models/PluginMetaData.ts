/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PluginMetaData
 */
export interface PluginMetaData {
    /**
     * 
     * @type {string}
     * @memberof PluginMetaData
     */
    main: string;
    /**
     * 
     * @type {string}
     * @memberof PluginMetaData
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PluginMetaData
     */
    author: string;
    /**
     * 
     * @type {string}
     * @memberof PluginMetaData
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof PluginMetaData
     */
    url: string;
}

/**
 * Check if a given object implements the PluginMetaData interface.
 */
export function instanceOfPluginMetaData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "main" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "author" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function PluginMetaDataFromJSON(json: any): PluginMetaData {
    return PluginMetaDataFromJSONTyped(json, false);
}

export function PluginMetaDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginMetaData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'main': json['main'],
        'name': json['name'],
        'author': json['author'],
        'version': json['version'],
        'url': json['url'],
    };
}

export function PluginMetaDataToJSON(value?: PluginMetaData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'main': value.main,
        'name': value.name,
        'author': value.author,
        'version': value.version,
        'url': value.url,
    };
}

