/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImageGenerationError } from './ImageGenerationError';
import {
    ImageGenerationErrorFromJSON,
    ImageGenerationErrorFromJSONTyped,
    ImageGenerationErrorToJSON,
} from './ImageGenerationError';
import type { ImageGenerationProgress } from './ImageGenerationProgress';
import {
    ImageGenerationProgressFromJSON,
    ImageGenerationProgressFromJSONTyped,
    ImageGenerationProgressToJSON,
} from './ImageGenerationProgress';
import type { ImageGenerationResult } from './ImageGenerationResult';
import {
    ImageGenerationResultFromJSON,
    ImageGenerationResultFromJSONTyped,
    ImageGenerationResultToJSON,
} from './ImageGenerationResult';
import type { ImageInformation } from './ImageInformation';
import {
    ImageInformationFromJSON,
    ImageInformationFromJSONTyped,
    ImageInformationToJSON,
} from './ImageInformation';

/**
 * 
 * @export
 * @interface ResponseGeneratorImage
 */
export interface ResponseGeneratorImage {
    /**
     * 
     * @type {string}
     * @memberof ResponseGeneratorImage
     */
    type?: ResponseGeneratorImageTypeEnum;
    /**
     * 
     * @type {{ [key: string]: ImageInformation; }}
     * @memberof ResponseGeneratorImage
     */
    images: { [key: string]: ImageInformation; };
    /**
     * 
     * @type {number}
     * @memberof ResponseGeneratorImage
     */
    performance: number;
    /**
     * 
     * @type {string}
     * @memberof ResponseGeneratorImage
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseGeneratorImage
     */
    message: string;
    /**
     * 
     * @type {number}
     * @memberof ResponseGeneratorImage
     */
    progress: number;
}


/**
 * @export
 */
export const ResponseGeneratorImageTypeEnum = {
    progress: 'progress'
} as const;
export type ResponseGeneratorImageTypeEnum = typeof ResponseGeneratorImageTypeEnum[keyof typeof ResponseGeneratorImageTypeEnum];


/**
 * Check if a given object implements the ResponseGeneratorImage interface.
 */
export function instanceOfResponseGeneratorImage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "images" in value;
    isInstance = isInstance && "performance" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "progress" in value;

    return isInstance;
}

export function ResponseGeneratorImageFromJSON(json: any): ResponseGeneratorImage {
    return ResponseGeneratorImageFromJSONTyped(json, false);
}

export function ResponseGeneratorImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseGeneratorImage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'images': (mapValues(json['images'], ImageInformationFromJSON)),
        'performance': json['performance'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'message': json['message'],
        'progress': json['progress'],
    };
}

export function ResponseGeneratorImageToJSON(value?: ResponseGeneratorImage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'images': (mapValues(value.images, ImageInformationToJSON)),
        'performance': value.performance,
        'error': value.error,
        'message': value.message,
        'progress': value.progress,
    };
}

